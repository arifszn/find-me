{"version":3,"sources":["components/Landing.js","components/layout/PageWrapper.js","helpers/Utils.js","components/faceFinder/AddFacePopup.js","components/faceFinder/AddFaces.js","components/faceFinder/SearchFaces.js","components/faceFinder/Result.js","components/faceFinder/FaceFinder.js","components/FadeIn.js","App.js","reportWebVitals.js","index.js"],"names":["StyledIframe","styled","iframe","Landing","props","Fragment","className","href","onClick","e","preventDefault","setDisplayLanding","src","frameborder","allowFullScreen","PageWrapper","children","loading","noPadding","bordered","bodyStyle","padding","hoverable","style","cursor","Utils","showNotification","message","type","title","sticky","notification","toUpperCase","slice","description","placement","duration","showTinyNotification","tinyMessage","textEllipsis","str","length","ending","substring","randomHexColor","Math","floor","random","toString","getAppName","urlToBlob","url","a","fetch","response","blob","file","File","StyledDrawer","Drawer","uploadButton","PlusOutlined","marginTop","AddFacePopup","useState","visible","setVisible","Form","useForm","form","setLoading","componentLoading","setComponentLoading","imageFileList","setImageFileList","previewImage","setPreviewImage","previewVisible","setPreviewVisible","useEffect","setTimeout","handleClose","handleCancel","handlePreview","console","log","preview","getBase64","originFileObj","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","onClose","destroyOnClose","maskClosable","forceRender","footer","textAlign","disabled","marginRight","validateFields","then","values","images","fileBlob","push","submitCallback","name","catch","info","spinning","size","delay","preserve","layout","Item","label","rules","required","placeholder","getValueFromEvent","Array","isArray","fileList","accept","listType","beforeUpload","onPreview","onChange","filter","validType","validSize","validateImage","centered","onCancel","alt","width","AddFaces","displayAddFacePopup","setDisplayAddFacePopup","addNew","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","gutter","align","margin","faces","map","face","index","xl","lg","md","sm","xs","marginBottom","URL","createObjectURL","danger","shape","icon","DeleteOutlined","array","findIndex","element","splice","setFaces","deleteFace","data","SearchFaces","image","list","setImage","Result","span","transition","canvas","toDataURL","Step","Steps","resizeFile","maxWidth","maxHeight","Resizer","imageFileResizer","uri","StepContent","div","StepAction","FaceFinder","setResult","current","setCurrent","modelLoaded","setModelLoaded","descriptors","setDescriptors","steps","content","all","faceapi","faceRecognitionNet","loadFromUri","process","faceLandmark68Net","ssdMobilenetv1","trainUploadedPhotos","startImageMatching","uploadedImage","faceMatcher","displaySize","withFaceLandmarks","withFaceDescriptors","_detections","_resizedDetections","item","findBestMatch","descriptor","forEach","i","box","detection","DrawBox","boxColor","draw","descriptions","imageBlob","img","withFaceDescriptor","detections","faceDescriptors","direction","FadeIn","state","SwitchTransition","mode","CSSTransition","addEndListener","node","done","addEventListener","classNames","logo","x","y","enableBackground","version","xmlSpace","App","displayLanding","role","rel","target","SmileOutlined","GithubOutlined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e30a638b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledIframe = styled.iframe`\r\n    max-width: 100%;\r\n    width: 560px;\r\n    height: 315px;\r\n\r\n    @media (max-width: 640px) {\r\n        height: 200px;\r\n    }\r\n`;\r\n\r\nconst Landing = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container mx-auto px-6 sm:px-12 flex flex-col-reverse lg:flex-row items-center\">\r\n                <div className=\"sm:w-2/5 flex flex-col items-start mt-16 lg:mt-0 mb-5 sm:mb-0\">\r\n                    <h1 className=\"text-4xl lg:text-6xl leading-none mb-4 mx-auto lg:ml-0\">\r\n                        <strong className=\"font-black\">Find</strong> Me\r\n                    </h1>\r\n                    <p className=\"lg:text-lg mb-4 sm:mb-12 text-center lg:text-left text-gray-400 font-semibold mx-auto lg:ml-0\">\r\n                        Server less face recognition app\r\n                    </p>\r\n                    <a \r\n                        href={'/#'}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            props.setDisplayLanding(false);\r\n                        }}\r\n                        className=\"font-semibold text-lg bg-blue-500 hover:bg-blue-400 text-white hover:text-gray-700 py-3 px-10 rounded-full mx-auto lg:ml-0\"\r\n                    >\r\n                        Get Started\r\n                    </a>\r\n                </div>\r\n                <div className=\"lg:flex lg:h-screen mx-auto my-auto mt-16 lg:mt-0\">\r\n                    <div className=\"flex justify-center items-center\">\r\n                        <div className=\"bg-white border-2 border-gray-300 p-6 rounded-md tracking-wide shadow-lg\">\r\n                        <StyledIframe src=\"https://www.youtube-nocookie.com/embed/j1D9GyQrPa4?rel=0&modestbranding=1&autohide=1&showinfo=0&controls=1\" frameborder=\"0\" allowFullScreen></StyledIframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nLanding.propTypes = {\r\n    setDisplayLanding: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Landing;","import { Card } from \"antd\"\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst PageWrapper = ({children, className = '', loading = false, noPadding = false}) => {\n    return (\n        <React.Fragment>\n            <Card\n                bordered={false}\n                bodyStyle={{padding: noPadding ? 0 : null}} \n                hoverable \n                className={`${className} z-shadow`} \n                style={{cursor: 'default'}} \n                loading={loading}\n            >\n                {children}\n            </Card>\n        </React.Fragment>\n    )\n}\n\nPageWrapper.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    noPadding: PropTypes.bool,\n}\n\nexport default PageWrapper;","import { notification, message as tinyMessage } from 'antd';\n\n/**\n * Display notification\n * \n * @param string message \n * @param string type \n * @param string/null title \n * @param boolean sticky \n */\nconst showNotification = (message = 'Something went wrong', type = 'error', title = null, sticky = false) => {\n    notification[type]({\n        message: title ? title : type[0].toUpperCase() + type.slice(1),\n        description: message,\n        placement: 'bottomRight',\n        duration: sticky ? 0 : 4.5\n    });\n};\n\n/**\n * Display tiny notification\n * \n * @param string message \n * @param string type \n */\nconst showTinyNotification = (message = 'Something went wrong', type = 'error') => {\n    tinyMessage[type](message);\n};\n\n/**\n * Return app name\n */\nconst getAppName = () => {\n    return 'Find Me';\n}\n\n/**\n * Ellipse long test\n * \n * @param string str \n * @param number length \n * @param string ending \n */\nconst textEllipsis = (str, length, ending = '...') => {\n    if (length == null) {\n      length = 100;\n    }\n    if (str.length > length) {\n      return str.substring(0, length - ending.length) + ending;\n    } else {\n      return str;\n    }\n};\n\n/**\n * Return a random color code in hex format\n */\nconst randomHexColor = () => {\n    return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}\n\n/**\n * Url to blob\n * \n * @param string url \n */\nconst urlToBlob = async (url) => {\n    const response = await fetch(url);\n    // here image is url/location of image\n    const blob = await response.blob();\n    const file = new File([blob], 'image.jpg', {type: blob.type});\n    return file;\n}\n\n/**\n * Utility helper\n */\nconst Utils = {\n    showNotification,\n    showTinyNotification,\n    textEllipsis,\n    randomHexColor,\n    getAppName,\n    urlToBlob\n}\n\nexport default Utils;","import { Drawer, Button, Spin, Input, Form, Upload, Modal } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Utils from '../../helpers/Utils';\nimport PropTypes from 'prop-types';\n\nconst StyledDrawer = styled(Drawer)`\n    .ant-drawer-content-wrapper {\n        width: 520px !important;\n        @media (max-width: 768px) {\n            max-width: calc(100vw - 16px) !important;\n        }\n    }\n`;\n\nconst uploadButton = (\n    <div>\n    <PlusOutlined />\n    <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n);\n\nconst AddFacePopup = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState((typeof props.loading !== 'undefined') ? props.loading : false);\n    const [componentLoading, setComponentLoading] = useState((typeof props.componentLoading !== 'undefined') ? props.componentLoading : false);\n\n    const [imageFileList, setImageFileList] = useState([]);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewVisible, setPreviewVisible] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setVisible(props.visible);\n        }, 100);\n    }, [props.visible])\n\n    useEffect(() => {\n        if (typeof props.loading !== 'undefined') {\n            setLoading(props.loading)\n        }\n    }, [props.loading])\n\n    useEffect(() => {\n        if (typeof props.componentLoading !== 'undefined') {\n            setComponentLoading(props.componentLoading)\n        }\n    }, [props.componentLoading])\n\n    const handleClose = () => {\n        setVisible(false);\n        setTimeout(() => {\n            props.handleCancel();\n        }, 400);\n    };\n\n    const handleOk = () => {\n        form\n        .validateFields()\n        .then(async (values) => {\n            let images = [];\n\n            for (const file of values.images) {\n                let fileBlob = null;\n                if (!file.url && !file.preview) {\n                    fileBlob = file.originFileObj\n                } else {\n                    fileBlob = await Utils.urlToBlob(file.url || file.preview);\n                }\n                images.push(fileBlob);\n            }\n\n            props.submitCallback({\n                name: values.name,\n                images: images\n            })\n        })\n        .catch((info) => {\n            console.log('Validate Failed:', info);\n        });\n    }\n\n    const validateImage = (file) => {\n        if (!file.url && !file.preview) {\n            const validType = file.type === 'image/jpeg' || file.type === 'image/jpg' || file.type === 'image/png';\n            if (!validType) {\n                Utils.showTinyNotification('You can only upload image file!', 'error');\n            }\n            const validSize = file.size / 1024 / 1024 < 5;\n            if (!validSize) {\n                Utils.showTinyNotification('Image must smaller than 5MB!', 'error');\n            }\n            return validType && validSize;\n        }\n        return true;\n    }\n\n    const imageListHandleChange = (info) => {\n        setImageFileList(info.fileList.filter(file => validateImage(file)))\n    };\n\n    const handlePreview = async file => {\n        console.log(file);\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        setPreviewImage(file.url || file.preview);\n        setPreviewVisible(true);\n    };\n\n    const getBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    const normFile = (e) => {\n        if (Array.isArray(e)) {\n            return e;\n        }\n\n        return e && e.fileList;\n    };\n\n    return (\n        <StyledDrawer\n            title={props.title}\n            onClose={handleClose}\n            visible={visible}\n            destroyOnClose={true}\n            maskClosable={false}\n            forceRender={true}\n            footer={\n                <div\n                    style={{\n                        textAlign: 'right',\n                    }}\n                >\n                    <Button disabled={componentLoading} onClick={handleClose} style={{ marginRight: 8 }}>\n                        Cancel\n                    </Button>\n                    <Button disabled={componentLoading} onClick={handleOk} type=\"primary\" loading={loading}>\n                        Save\n                    </Button>\n                </div>\n            }\n        >\n            <Spin spinning={componentLoading} size=\"large\" delay={500}>\n                <Form\n                    preserve={false}\n                    form={form}\n                    layout=\"vertical\"\n                    name=\"face-form\"\n                >\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please enter the face's name\"\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"Enter the face's name\" /* autocomplete=\"off\" *//>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"images\"\n                        label=\"Images\"\n                        getValueFromEvent={normFile}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please upload minimum 1 image of the face',\n                            },\n                        ]}\n                    >\n                        <Upload\n                            accept={['image/png', 'image/jpeg', 'image/jpg']}\n                            listType=\"picture-card\"\n                            fileList={imageFileList}\n                            beforeUpload={\n                                () => {\n                                    return false;\n                                }\n                            }\n                            onPreview={handlePreview}\n                            onChange={imageListHandleChange}\n                        >\n                            {imageFileList.length >= 8 ? null : uploadButton}\n                        </Upload>\n                    </Form.Item>\n                </Form>\n                <Modal\n                    visible={previewVisible}\n                    title={'Preview'}\n                    footer={null}\n                    centered\n                    onCancel={() => setPreviewVisible(false)}\n                >\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </Spin>\n        </StyledDrawer>\n    );\n}\n\nAddFacePopup.propTypes = {\n    handleCancel: PropTypes.func.isRequired,\n    submitCallback: PropTypes.func.isRequired,\n    visible: PropTypes.bool.isRequired,\n    loading: PropTypes.bool,\n    componentLoading: PropTypes.bool,\n    title: PropTypes.node,\n}\n\nexport default AddFacePopup;","import { Row, Col, Button } from 'antd';\nimport React, { useState } from 'react';\nimport AddFacePopup from './AddFacePopup';\nimport {\n    DeleteOutlined\n} from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\nconst AddFaces = (props) => {\n    const [displayAddFacePopup, setDisplayAddFacePopup] = useState(false);\n\n    const deleteFace = (face) => {\n        let array = [...props.faces];\n\n        let index = array.findIndex(element => element === face);\n\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n\n        props.setFaces(array);\n    }\n\n    const addNew = (\n        <div className=\"rounded sm:w-full py-16 text-center opacity-50 z-hover cursor-pointer my-6\" onClick={() => setDisplayAddFacePopup(true)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-user-plus  mx-auto\"><path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/><circle cx=\"8.5\" cy=\"7\" r=\"4\"/><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"/><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"/></svg>\n            <div className=\"py-4\">\n                Add <span className=\"font-medium\">Face</span> to Search\n            </div>\n        </div>\n    )\n\n    return (\n        <React.Fragment>\n            <Row gutter={24} align=\"middle\" style={{margin: '24px 12px 0 12px'}}>\n                {\n                    props.faces.map((face, index) => (\n                        <Col \n                            xl={6}\n                            lg={6}\n                            md={12}\n                            sm={24}\n                            xs={24}\n                            style={{marginBottom: 24}}\n                            key={index}\n                        >\n                            <div className=\"bg-white px-4 py-6 rounded-lg shadow-lg\">\n                                <div>\n                                    <img \n                                        src={URL.createObjectURL(face.images[0])}\n                                        alt={'thumbnail'}\n                                        className=\"mx-auto h-40 rounded-md object-cover\"\n                                    />\n                                </div>\n                                <div className=\"mt-2 text-center\">\n                                    <h5 className=\"font-bold font-mono text-gray-400\">{face.name}</h5>\n                                </div>\n                                <div className=\"flex justify-center mt-2\">\n                                    <Button danger type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} onClick={() => deleteFace(face)}/>\n                                </div>\n                            </div>\n                        </Col>\n                    ))\n                }\n                <Col \n                    xl={6}\n                    lg={6}\n                    md={12}\n                    sm={24}\n                    xs={24}\n                    style={{marginBottom: 24}}\n                >\n                    {addNew}\n                </Col>\n            </Row>\n            {\n                displayAddFacePopup && (\n                    <AddFacePopup\n                        title={'Add Face'}\n                        visible={displayAddFacePopup}\n                        handleCancel={\n                            () => {\n                                setDisplayAddFacePopup(false);\n                            }\n                        }\n                        submitCallback={\n                            (data) => {\n                                let array = [...props.faces];\n                                array.push(data);\n                                props.setFaces(array);\n                                setDisplayAddFacePopup(false);\n                            }\n                        }\n                    />\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nAddFaces.propTypes = {\n    faces: PropTypes.array.isRequired,\n    setFaces: PropTypes.func.isRequired,\n}\n\nexport default AddFaces;","import { Upload, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport Utils from '../../helpers/Utils';\n\nconst uploadButton = (\n    <div>\n    <PlusOutlined />\n    <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n);\n\nconst SearchFaces = (props) => {\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewVisible, setPreviewVisible] = useState(false);\n\n    const validateImage = (file) => {\n        if (!file.url && !file.preview) {\n            const validType = file.type === 'image/jpeg' || file.type === 'image/jpg' || file.type === 'image/png';\n            if (!validType) {\n                Utils.showTinyNotification('You can only upload image file!', 'error');\n            }\n            const validSize = file.size / 1024 / 1024 < 5;\n            if (!validSize) {\n                Utils.showTinyNotification('Image must smaller than 5MB!', 'error');\n            }\n            return validType && validSize;\n        }\n        return true;\n    }\n\n    const imageListHandleChange = (info) => {\n        let list = info.fileList.filter(file => validateImage(file));\n\n        props.setImage(list.length ? list[0] : null);\n    };\n\n    const handlePreview = async file => {\n        console.log(file);\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        setPreviewImage(file.url || file.preview);\n        setPreviewVisible(true);\n    };\n\n    const getBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{margin: 24}}>\n                <Upload\n                    accept={['image/png', 'image/jpeg', 'image/jpg']}\n                    listType=\"picture-card\"\n                    fileList={props.image ? [props.image] : []}\n                    beforeUpload={\n                        () => {\n                            return false;\n                        }\n                    }\n                    onPreview={handlePreview}\n                    onChange={imageListHandleChange}\n                >\n                    {props.image ? null : uploadButton}\n                </Upload>\n            </div>\n            <Modal\n                visible={previewVisible}\n                title={'Preview'}\n                footer={null}\n                centered\n                onCancel={() => setPreviewVisible(false)}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nSearchFaces.propTypes = {\n    image: PropTypes.object,\n    setImage: PropTypes.func.isRequired,\n}\n\nexport default SearchFaces;","import { Spin, Row, Col, Image } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Result = (props) => {\n    return (\n        <React.Fragment>\n            <Row style={{padding: 12}}>\n                <Col span={24}>\n                    {\n                        props.result ? (\n                            <div>\n                                <Image\n                                    src={typeof props.result.image !== 'undefined' ? props.result.image : null}\n                                    preview={false}\n                                    placeholder={true}\n                                    className=\"rounded-lg z-shadow\"\n                                    style={{\n                                        transition: '0.3s ease',\n                                    }}\n                                    alt={'result'}\n                                />\n                                <img\n                                    alt=\"canvas\" \n                                    className=\"absolute top-0 left-0\" \n                                    src={typeof props.result.canvas !== 'undefined' ? props.result.canvas.toDataURL() : null} \n                                />\n                            </div>\n                        ) : (\n                            <div className=\"my-16 text-center\">\n                                <Spin size=\"large\"/>\n                            </div>\n                        )\n                    }\n                </Col>\n            </Row>\n        </React.Fragment>\n    )\n}\n\nResult.propTypes = {\n    result: PropTypes.object\n}\n\nexport default Result;","import React, { useEffect, useState } from 'react';\nimport { Steps, Button, Spin } from 'antd';\nimport styled from 'styled-components';\nimport PageWrapper from '../layout/PageWrapper';\nimport AddFaces from './AddFaces';\nimport * as faceapi from 'face-api.js';\nimport SearchFaces from './SearchFaces';\nimport Utils from '../../helpers/Utils';\nimport Result from './Result';\nimport Resizer from \"react-image-file-resizer\";\n\nconst { Step } = Steps;\n\nconst resizeFile = (file, maxWidth = 300, maxHeight = 300) => {\n    return new Promise((resolve) => {\n        Resizer.imageFileResizer(\n            file,\n            maxWidth,\n            maxHeight,\n            \"JPEG\",\n            100,\n            0,\n            (uri) => {\n                resolve(uri);\n            },\n            \"blob\"\n        );\n    });\n}\n\nconst StepContent = styled.div`\n    background-color: #fafafa;\n    border: 1px dashed #e9e9e9;\n    border-radius: 2px;\n`;\n\nconst StepAction = styled.div`\n    margin-top: 24px;\n    float: right;\n`;\n\nconst FaceFinder = () => {\n    const [faces, setFaces] = useState([]);\n    const [image, setImage] = useState(null);\n    const [result, setResult] = useState(null);\n\n    const [current, setCurrent] = useState(0);\n    const [modelLoaded, setModelLoaded] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [componentLoading, setComponentLoading] = useState(false);\n\n    const [descriptors, setDescriptors] = useState(null);\n\n    const steps = [\n        {\n            title: 'Add Faces',\n            description: <span className=\"text-gray-400\">Provide faces to be searched. All images will be deleted after processing.</span>,\n            content: <AddFaces faces={faces} setFaces={setFaces} />,\n        },\n        {\n            title: 'Search Faces',\n            description: <span className=\"text-gray-400\">Search the faces in an image.</span>,\n            content: <SearchFaces image={image} setImage={setImage} />,\n        },\n        {\n            title: 'Result',\n            description: '',\n            content: <Result result={result} />,\n        },\n    ];\n\n    useEffect(() => {\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri(`${process.env.PUBLIC_URL}/assets/models`),\n            faceapi.nets.faceLandmark68Net.loadFromUri(`${process.env.PUBLIC_URL}/assets/models`),\n            faceapi.nets.ssdMobilenetv1.loadFromUri(`${process.env.PUBLIC_URL}/assets/models`)\n        ]).then(() => {\n            setModelLoaded(true);\n        })\n    }, [])\n\n    useEffect(() => {\n        if (current === 0) {\n            setDescriptors(null);\n        }\n\n        if (current === 1) {\n            trainUploadedPhotos();\n        }\n\n        if (current === 2) {\n            setResult(null);\n            startImageMatching();\n        }\n        // eslint-disable-next-line\n    }, [current])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const startImageMatching = async () => {\n        if (descriptors && image) {\n            setLoading(true);\n\n            let fileBlob = null;\n\n            if (!image.url && !image.preview) {\n                fileBlob = image.originFileObj\n            } else {\n                fileBlob = await Utils.urlToBlob(image.url || image.preview);\n            }\n\n            \n            \n            let uploadedImage = await faceapi.bufferToImage(fileBlob);\n\n            if (uploadedImage.width > 1000 || uploadedImage.height > 1000) {\n                fileBlob = await resizeFile(fileBlob, 1000, 1000);\n                uploadedImage = await faceapi.bufferToImage(fileBlob);\n            }\n            \n            const faceMatcher = new faceapi.FaceMatcher(descriptors, 0.6);\n\n            let canvas = faceapi.createCanvasFromMedia(uploadedImage);\n            const displaySize = { width: uploadedImage.width, height: uploadedImage.height };\n            faceapi.matchDimensions(canvas, displaySize);\n\n            const _detections = await faceapi.detectAllFaces(uploadedImage).withFaceLandmarks().withFaceDescriptors();\n            const _resizedDetections = faceapi.resizeResults(_detections, displaySize);\n            const _result = _resizedDetections.map(item => faceMatcher.findBestMatch(item.descriptor));\n\n            _result.forEach((result, i) => {\n                const box = _resizedDetections[i].detection.box;\n                const drawBox = new faceapi.draw.DrawBox(box, { label: result.toString(), boxColor: \"#096dd9\" });\n                drawBox.draw(canvas);\n            })\n\n            setResult({\n                image: URL.createObjectURL(fileBlob),\n                canvas: canvas\n            });\n\n            setLoading(false);\n        }\n    }\n\n    const trainUploadedPhotos = () => {\n        setComponentLoading(true);\n\n        Promise.all(\n            faces.map(face => {\n                const descriptions = [];\n\n                for (const imageBlob of face.images) {\n                    try {\n                        faceapi.bufferToImage(imageBlob)\n                            .then(img => {\n                                faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor()\n                                    .then(detections => {\n                                        if (detections) {\n                                            descriptions.push(detections.descriptor);\n                                        }\n                                    })\n                            });\n                    } catch (error) {\n                        console.error(error);\n                    }\n                }\n\n                return new faceapi.LabeledFaceDescriptors(face.name, descriptions);\n            })\n        ).then(faceDescriptors => {\n            setComponentLoading(false);\n            setDescriptors(faceDescriptors);\n        })\n    }\n\n    const isNextDisabled = () => {\n        if (current === 0 && (!modelLoaded || !faces.length)) {\n            return true;\n        }\n\n        if (current === 1 && (!descriptors || !image)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    const resetState = () => {\n        setFaces([]);\n        setImage(null);\n        setResult(null);\n\n        setCurrent(0);\n        setDescriptors(null);\n    }\n\n    return (\n        <PageWrapper className=\"m-10\">\n            <Spin spinning={componentLoading} /* delay={500} */>\n                <Steps current={current} direction=\"vertical\">\n                    {steps.map(item => (\n                        <Step key={item.title} title={item.title} description={item.description} />\n                    ))}\n                </Steps>\n                <StepContent>{steps[current].content}</StepContent>\n                <StepAction>\n                    {current > 0 && (\n                        <Button style={{ margin: '0 8px' }} onClick={() => prev()} loading={loading}>\n                            Previous\n                        </Button>\n                    )}\n                    {current < steps.length - 1 && (\n                        <Button\n                            type=\"primary\"\n                            onClick={() => next()}\n                            disabled={isNextDisabled()}\n                            loading={loading}\n                        >\n                            Next\n                        </Button>\n                    )}\n                    {current === steps.length - 1 && (\n                        <Button\n                            type=\"primary\"\n                            onClick={resetState}\n                            loading={loading}\n                        >\n                            Done\n                        </Button>\n                    )}\n                </StepAction>\n            </Spin>\n        </PageWrapper>\n    )\n}\n\nexport default FaceFinder;","import React from 'react';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nconst FadeIn = ({\n  children,\n  state\n}) => {\n  return (\n    <SwitchTransition mode={\"out-in\"}>\n        <CSSTransition\n        key={state ? \"if\" : \"else\"}\n        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n        classNames='fade'\n        >\n            {children}\n        </CSSTransition>\n    </SwitchTransition>\n  );\n};\n\nFadeIn.propTypes = {\n    children: PropTypes.node.isRequired,\n    state: PropTypes.bool.isRequired\n}\n\nexport default FadeIn;","import React, { useState } from \"react\";\nimport Landing from \"./components/Landing\";\nimport FaceFinder from \"./components/faceFinder/FaceFinder\";\nimport {\n    GithubOutlined,\n    SmileOutlined \n} from '@ant-design/icons';\nimport { Avatar, Layout } from 'antd';\nimport FadeIn from \"./components/FadeIn\";\n\nconst logo = (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0\"\n        y=\"0\"\n        enableBackground=\"new 0 0 512 512\"\n        version=\"1.1\"\n        viewBox=\"0 0 512 512\"\n        xmlSpace=\"preserve\"\n        className=\"w-10 h-10 text-purple-600\"\n    >\n        <path\n            fill=\"#B9BBC1\"\n            d=\"M192 92c-13.531 0-25.664 8.574-30.172 21.332a7.994 7.994 0 004.875 10.211c2.733.982 5.594.241 7.695-1.501L208 162.393V172c0 4.418 3.578 8 8 8s8-3.582 8-8v-48c0-17.645-14.352-32-32-32z\"\n        ></path>\n        <path\n            fill=\"#8B8996\"\n            d=\"M168 108c-14.664 0-28.523 5.629-39.328 16.176L26.102 236.152l11.797 10.805 2.771-3.027L208 289.806V292c0 4.418 3.578 8 8 8s8-3.582 8-8V164c0-30.879-25.125-56-56-56z\"\n        ></path>\n        <path\n            fill=\"#B9BBC1\"\n            d=\"M320 92c13.531 0 25.664 8.574 30.172 21.332a7.994 7.994 0 01-4.875 10.211c-2.733.982-5.594.241-7.695-1.501L304 162.393V172c0 4.418-3.578 8-8 8s-8-3.582-8-8v-48c0-17.645 14.351-32 32-32z\"\n        ></path>\n        <path\n            fill=\"#8B8996\"\n            d=\"M344 108c14.664 0 28.523 5.629 39.328 16.176l102.57 111.977-11.797 10.805-2.771-3.027L304 289.806V292c0 4.418-3.578 8-8 8s-8-3.582-8-8V164c0-30.879 25.125-56 56-56z\"\n        ></path>\n        <circle cx=\"112\" cy=\"308\" r=\"88\" fill=\"#53DCFF\"></circle>\n        <path\n            fill=\"#5C546A\"\n            d=\"M112 196C50.242 196 0 246.242 0 308s50.242 112 112 112 112-50.242 112-112-50.242-112-112-112zm0 192c-44.111 0-80-35.889-80-80s35.889-80 80-80 80 35.889 80 80-35.889 80-80 80z\"\n        ></path>\n        <path\n            fill=\"#5C546A\"\n            d=\"M192 204h128l1.23-.017C305.661 219.23 296 240.487 296 264v28h-80v-28c0-23.513-9.661-44.77-25.23-60.017\"\n        ></path>\n        <circle cx=\"128\" cy=\"292\" r=\"32\" fill=\"#FFF\"></circle>\n        <circle cx=\"400\" cy=\"308\" r=\"88\" fill=\"#53DCFF\"></circle>\n        <path\n            fill=\"#5C546A\"\n            d=\"M400 196c-61.758 0-112 50.242-112 112s50.242 112 112 112 112-50.242 112-112-50.242-112-112-112zm0 192c-44.111 0-80-35.889-80-80s35.889-80 80-80 80 35.889 80 80-35.889 80-80 80z\"\n        ></path>\n        <circle cx=\"416\" cy=\"292\" r=\"32\" fill=\"#FFF\"></circle>\n        <path fill=\"#8B8996\" d=\"M192 188H320V204H192z\"></path>\n    </svg>\n)\n\nconst App = () => {\n    const [displayLanding, setDisplayLanding] = useState(true);\n\n    return (\n        <React.Fragment>\n            <Layout>\n                <div className=\"bg-indigo-50 min-h-screen\">\n                    <main>\n                        <nav className=\"bg-white shadow\" role=\"navigation\">\n                            <div className=\"container mx-auto p-3 flex items-center flex-no-wrap\">\n                                <div className=\"mr-8\">\n                                    <a href=\"/#\" rel=\"home\" onClick={(e) => {\n                                        e.preventDefault();\n                                        setDisplayLanding(true);\n                                    }}>\n                                        {logo}\n                                    </a>\n                                </div>\n                                <div className=\"flex-grow flex items-center\">\n                                    <ul className=\"flex ml-auto\">\n                                        <li>\n                                            <a \n                                                className=\"block px-4 py-1 p-2 lg:px-4 text-purple-600\" \n                                                href=\"http://arifszn.github.io\" \n                                                title=\"Author\"\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                <Avatar className=\"bg-blue-300\" icon={<SmileOutlined  />} alt=\"Author\" />\n                                            </a>\n                                        </li>\n                                        <li>\n                                            <a \n                                                className=\"block px-4 py-1 p-2 lg:px-4 text-purple-600\" \n                                                href=\"https://github.com/arifszn/find-me\" \n                                                title=\"Source\"\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n                                                <Avatar className=\"bg-blue-300\" icon={<GithubOutlined />} alt=\"Source\" />\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </nav>\n                        <div>\n                            <FadeIn state={displayLanding}>\n                                {\n                                    displayLanding ? (\n                                        <Landing key=\"if\" setDisplayLanding={setDisplayLanding} />\n                                    ) : (\n                                        <FaceFinder key=\"else\" />\n                                    )\n                                }\n                            </FadeIn>\n                        </div>\n                    </main>\n                </div>\n            </Layout>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}